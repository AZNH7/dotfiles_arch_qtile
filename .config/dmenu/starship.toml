[line_break]
disabled = true

# Replace the "❯" symbol in the prompt with "➜"
[character]                            # The name of the module we are configuring is "character"
success_symbol = "[➜](bold green)"     # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red)"

[conda]
format = "[$environment](bold green)"
ignore_base = false

[git_branch]
symbol = "🌱 "
truncation_length = 10
# symbol = " "

[git_commit]
commit_hash_length = 4
tag_symbol = "🔖 "

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)" 
modified = "[${count}+](yellow)" 
deleted =  "[${count}-](red)" 
conflicted =  "[${count}~](red)" 
ahead = "⇡${count}"
behind = "⇣${count}"
untracked = "[${count}?](blue)" 
staged = "[${count}+](green)" 
diverged = "⇕"
up_to_date = "[✓](green)"
renamed = "[»],[«]($style)"

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"	
revert = "revert"	
cherry_pick = "cherry"
bisect = "bisect"	
am = "am"	
am_or_rebase = "am/rebase"

[username]
style_user = "blue bold"
style_root = "black bold"
# format = "[🌐](bold green) "
format = "[🌐 $user]($style) on "
disabled = false
show_always = true

[hostname]
ssh_only = false
# format = 'on [$hostname](bold purple) '
format = '[$ssh_symbol$hostname]($style) in '
trim_at = "."
ssh_symbol = "🌐 "
disabled = false

[directory]
# read_only = " "
truncation_length = 10
truncate_to_repo = true # truncates directory to root folder if in github repo
# style = "bold italic blue"

[aws]
format = 'on [$symbol($profile )(\($region\) )]($style)'
style = "bold yellow"
symbol = "☁️ "
expiration_symbol = " "


[aws.region_aliases]
ap-southeast-2 = 'au'
us-east-1 = 'va'
[aws.profile_aliases]
CompanyGroupFrobozzOnCallAccess = 'Frobozz'

[docker_context]
symbol = "🐳 "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

# [elixir]
# symbol = " "

# [elm]
# symbol = " "

[hg_branch]
symbol = " "

# [package]
# symbol = " "

[python]
symbol = "🐍 "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[terraform]
symbol = "💠"
format = "via [$symbol$version]($style) "
style = "blue bold"
disabled = false
detect_extensions = ['tf', 'tfplan', 'tfstate']
detect_folders = ['.terraform']


